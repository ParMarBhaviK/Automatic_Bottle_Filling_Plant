C51 COMPILER V9.54   UART                                                                  04/25/2017 12:29:31 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE UART
OBJECT MODULE PLACED IN C:\Users\Guest\Desktop\uart.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE uart.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\uart.ls
                    -t) TABS(2) OBJECT(C:\Users\Guest\Desktop\uart.obj)

line level    source

   1          #include <reg51.h>
   2          #include <uart.h>
   3          #include <pwm.h>
   4          
   5          float pwm_freq,duty_ratio;
   6          extern unsigned char buffer;
   7          extern unsigned int num;
   8          
   9          void UART_Init(unsigned long baudrate)
  10          { TMOD=0x20; // 8bit auto reload timer1
  11   1        SCON=0x50; // Serial mode 1, 8 bit data, 1 stop bit, 1 start bit and Enable Receiving
  12   1        TH1= 256 - f_osc / (unsigned long)(6*32*baudrate); 
  13   1        TR1=1;
  14   1        EA=1;
  15   1        ES=1;
  16   1      }
  17          
  18          void UART_Receive(void) interrupt 4
  19          {
  20   1        /*if(RI==1)
  21   1        { RI=0;
  22   1          buffer = SBUF;
  23   1          if(buffer == 'f')
  24   1          { pwm_freq=((float)(num)/10.0);
  25   1            num=0;
  26   1          }
  27   1          else if(buffer == 'd')
  28   1          { duty_ratio=((float)(num)/100.0);
  29   1            num=0;
  30   1            pwm(pwm_freq,duty_ratio);
  31   1          }
  32   1          else
  33   1          {num =  num*10 + (buffer-'0');
  34   1          }
  35   1        }*/
  36   1      }
  37          
  38          void UART_Transmitchar(unsigned char x)
  39          { 
  40   1        SBUF=x;
  41   1        while(TI==0);
  42   1        TI=0;
  43   1        
  44   1      }
  45          /*
  46          void UART_Transmitnumber(int num)
  47          { unsigned char num0,num1,num2,num3;
  48            if(num<0)
  49            { UART_Transmitchar('-');
  50              num*=(-1);
  51            }
  52              num0=num/1000;
  53                  num1=(num%1000)/100;
  54              num2=(num%100)/10;
C51 COMPILER V9.54   UART                                                                  04/25/2017 12:29:31 PAGE 2   

  55              num3=(num%10);
  56            
  57              if(num>9999)
  58              {   UART_Transmitstring("Number is too large");
  59                  UART_Transmitchar(0x0D);
  60              }
  61            else if(num>999)
  62            { 
  63              UART_Transmitchar(num0+'0');
  64              UART_Transmitchar(num1+'0');
  65              UART_Transmitchar(num2+'0');
  66              UART_Transmitchar(num3+'0');
  67            }
  68            else if(num>99)
  69            { UART_Transmitchar(num1+'0');
  70              UART_Transmitchar(num2+'0');
  71              UART_Transmitchar(num3+'0');
  72            }
  73            else if(num>9)
  74            {
  75              UART_Transmitchar(num2+'0');
  76              UART_Transmitchar(num3+'0');
  77            }
  78            else if(num>=0)
  79            {
  80            UART_Transmitchar(num+'0');
  81            }
  82            
  83          }*/
  84          
  85          void UART_Transmitstring(char* str)
  86          { while(*str !=0)
  87   1        {UART_Transmitchar(*str);
  88   2         str++;
  89   2        }
  90   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    112    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      8       4
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
